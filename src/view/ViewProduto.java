/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerFornecedor;
import controller.ControllerProdutos;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelFornecedor;
import model.ModelProdutos;
import util.BLMascaras;
import DAO.DAOGrupoProduto;
import controller.ControllerGrupoProduto;
import javax.swing.DefaultComboBoxModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.ModelGrupoProduto;
import model.ModelUnidade;
import model.ModelNcm;
import model.ModelCest;
import model.ModelOrigem;
import controller.ControllerUnidade;
import controller.ControllerNcm;
import controller.ControllerCest;
import controller.ControllerOrigem;
import controller.ControllerTributacao;
import model.ModelTributacao;
import util.BLTiraAcentos;
import model.ModelParametros;
import controller.ControllerParametros;

/**
 * Cadastro de Produtos
 *
 * @author charles
 */
public class ViewProduto extends javax.swing.JFrame {

    ControllerUnidade controllerUnidade = new ControllerUnidade();
    ControllerUnidade controllerUnVolume = new ControllerUnidade();
    ControllerNcm controllerNcm = new ControllerNcm();
    ControllerCest controllerCest = new ControllerCest();
    ControllerTributacao controllerTributacao = new ControllerTributacao();
    ControllerOrigem controllerOrigem = new ControllerOrigem();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ControllerFornecedor controllerFornecedor = new ControllerFornecedor();
    ControllerGrupoProduto controllerGrupoProduto = new ControllerGrupoProduto();
    ControllerParametros controllerParametros = new ControllerParametros();
    ArrayList<ModelProdutos> listamModelProdutos = new ArrayList<ModelProdutos>();
    ArrayList<ModelFornecedor> listaFornecedor = new ArrayList<ModelFornecedor>();
    ArrayList<ModelGrupoProduto> listaModelGrupoProduto = new ArrayList<>();
    ArrayList<ModelUnidade> listaModelUnidade = new ArrayList<>();
    ArrayList<ModelUnidade> listaModelUnVolume = new ArrayList<>();
    ArrayList<ModelNcm> listaModelNcm = new ArrayList<>();
    ArrayList<ModelCest> listaModelCest = new ArrayList<>();
    ArrayList<ModelTributacao> listaModelTributacao = new ArrayList<>();
    ArrayList<ModelOrigem> listaModelOrigem = new ArrayList<>();
    ModelProdutos modelProdutos = new ModelProdutos();
    ModelParametros modelParametros = new ModelParametros();
    ModelGrupoProduto modelGrupoProduto = new ModelGrupoProduto();
    ModelUnidade modelUnidade = new ModelUnidade();
    ModelUnidade modelUnVolume = new ModelUnidade();
    ModelNcm modelNcm = new ModelNcm();
    ModelTributacao modelTributacao = new ModelTributacao();
    ModelCest modelCest = new ModelCest();
    ModelOrigem modelOrigem = new ModelOrigem();
    String tipoCadastro;

//    ViewFichaTecnica viewEstoqueProducao = new ViewFichaTecnica();

    /*

     */
    /**
     * Creates new form ViewProduto
     */
    public ViewProduto() {

        initComponents();
        setLocationRelativeTo(null);
        this.carregarProdutos();
        this.listarFornecedor();
        this.desabilitarHabilitarCampos(false);
        preencherCbGrupo();
        preencherCbUnidade();
        preencherCbUnidadeVolume();
        preencherCbNcm();
        preencherCbCest();
        preencherCbOrigem();
        preencherCbTributacao();
        btSalvar.setEnabled(false);
        btCancelar.setEnabled(false);
        btAlterar.setEnabled(true);
///        btFichaTecnica.setEnabled(false);
        btNovo.setEnabled(true);
        lbUnVolume.setText("");
        modelParametros = controllerParametros.getConfiguracoesGeraisController(1);
        if (modelParametros.getCad_anvisa() == 0) {
            jTabbedProdutoTributacao.setEnabledAt(3, false);

        } else {
            jTabbedProdutoTributacao.setEnabledAt(3, true);
        }
        if (modelParametros.getCad_utiliza_ficha_tec() == 0) {
            jTabbedProdutoTributacao.setEnabledAt(2, false);

        } else {
            jTabbedProdutoTributacao.setEnabledAt(2, true);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btNovo = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        txCodigoP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfValor = new javax.swing.JFormattedTextField();
        jtfEstoque = new javax.swing.JFormattedTextField();
        jtfNome = new javax.swing.JTextField();
        cbFornecedores = new componentes.UJComboBox();
        jtfCodigoBarras = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTabbedProdutoTributacao = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        cbNcm = new javax.swing.JComboBox<>();
        cbTributacao = new javax.swing.JComboBox<>();
        cbCest = new javax.swing.JComboBox<>();
        cbOrigem = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jcbIngrediente = new javax.swing.JCheckBox();
        jcbComposicao = new javax.swing.JCheckBox();
        txFatorConversao = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        cbUnidadeVolume = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jcbNaoFracionar = new javax.swing.JCheckBox();
        jpAnvisa = new javax.swing.JPanel();
        jcbAnvisa = new javax.swing.JCheckBox();
        txRegMs = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cbDCB = new javax.swing.JComboBox<>();
        cbUnInsumo = new javax.swing.JComboBox<>();
        cbUnFarmaco = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cbUnMedicamento = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        cbTipo = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jcbAntibiotico = new javax.swing.JCheckBox();
        jcbControlado = new javax.swing.JCheckBox();
        txPesquisaProduto = new javax.swing.JTextField();
        cbGrupo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        cbUnidade = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cbLocalImpressao = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        rbNome = new javax.swing.JRadioButton();
        rbBarra = new javax.swing.JRadioButton();
        cbSituacao = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txNomeResumido = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        rbGrupo = new javax.swing.JRadioButton();
        txEstoqueMinimo = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txCusto = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        cbForcaVendas = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();
        txVolumeEstoque = new javax.swing.JTextField();
        lbUnVolume = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Produtos");
        setAlwaysOnTop(true);
        setResizable(false);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Descrição:");

        jLabel2.setText("Valor:");

        jLabel3.setText("Fornecedor:");

        jLabel4.setText("Estoque:");

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Adicionar.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Editar.png"))); // NOI18N
        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Cancelar.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Salvar.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setEnabled(false);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        txCodigoP.setEditable(false);
        txCodigoP.setEnabled(false);
        txCodigoP.setFocusable(false);

        jLabel5.setText("Código:");

        jtfValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfValorFocusLost(evt);
            }
        });
        jtfValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValorActionPerformed(evt);
            }
        });
        jtfValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfValorKeyReleased(evt);
            }
        });

        jtfEstoque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfEstoqueFocusLost(evt);
            }
        });
        jtfEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfEstoqueKeyReleased(evt);
            }
        });

        jtfNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNomeFocusLost(evt);
            }
        });

        jtfCodigoBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCodigoBarrasKeyReleased(evt);
            }
        });

        jLabel6.setText("Código de barras:");

        jTabbedProdutoTributacao.setToolTipText("");
        jTabbedProdutoTributacao.setFocusable(false);
        jTabbedProdutoTributacao.setName(""); // NOI18N

        tbProdutos.setAutoCreateRowSorter(true);
        tbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Valor", "Custo", "Quantidade", "Barra", "Grupo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbProdutos.setFocusable(false);
        tbProdutos.getTableHeader().setReorderingAllowed(false);
        tbProdutos.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(tbProdutos);
        if (tbProdutos.getColumnModel().getColumnCount() > 0) {
            tbProdutos.getColumnModel().getColumn(1).setPreferredWidth(348);
        }

        jTabbedProdutoTributacao.addTab("Pesquisa", jScrollPane2);

        jPanel2.setToolTipText("");

        cbCest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCestActionPerformed(evt);
            }
        });

        cbOrigem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", " " }));

        jLabel7.setText("origem");

        jLabel8.setText("Cest");

        jLabel9.setText("NCM");

        jLabel10.setText("Tributação");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(cbNcm, 0, 257, Short.MAX_VALUE)
                    .addComponent(cbTributacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(cbOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCest, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNcm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTributacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        jTabbedProdutoTributacao.addTab("Tributação", jPanel2);

        jcbIngrediente.setText("Ingrediente");

        jcbComposicao.setText("Utiliza composição");

        txFatorConversao.setText("1");
        txFatorConversao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txFatorConversaoKeyReleased(evt);
            }
        });

        jLabel25.setText("Fator de conversão");

        cbUnidadeVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUnidadeVolumeActionPerformed(evt);
            }
        });

        jLabel27.setText("Unidade");

        jcbNaoFracionar.setText("Não fracionar quantidade na ordem de produção ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbComposicao)
                    .addComponent(jcbIngrediente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txFatorConversao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbUnidadeVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(89, 89, 89)
                        .addComponent(jcbNaoFracionar)))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jcbComposicao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbIngrediente))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel27)
                            .addComponent(jcbNaoFracionar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txFatorConversao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbUnidadeVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedProdutoTributacao.addTab("Ficha Técnica", jPanel3);

        jcbAnvisa.setText("Envia para Anvisa");

        txRegMs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txRegMsActionPerformed(evt);
            }
        });

        jLabel17.setText("Registro MS");

        jLabel18.setText("Código DCB");

        jLabel19.setText("Tipo unidade insumo");

        jLabel20.setText("Tipo unidade farmaco");

        jLabel21.setText("Tipo unid. Medicamento");

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insumo", "Mercadoria" }));

        jLabel22.setText("Tipo");

        jcbAntibiotico.setText("Antiobiótico");

        jcbControlado.setText("Controlado");

        javax.swing.GroupLayout jpAnvisaLayout = new javax.swing.GroupLayout(jpAnvisa);
        jpAnvisa.setLayout(jpAnvisaLayout);
        jpAnvisaLayout.setHorizontalGroup(
            jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAnvisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAnvisaLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18))
                    .addGroup(jpAnvisaLayout.createSequentialGroup()
                        .addComponent(jcbAnvisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbAntibiotico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbControlado)
                        .addGap(0, 239, Short.MAX_VALUE))
                    .addGroup(jpAnvisaLayout.createSequentialGroup()
                        .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbTipo, 0, 219, Short.MAX_VALUE)
                                .addComponent(txRegMs))
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(10, 10, 10)
                .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbUnInsumo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbDCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbUnFarmaco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbUnMedicamento, 0, 274, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpAnvisaLayout.setVerticalGroup(
            jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAnvisaLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAnvisaLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbDCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbUnInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbUnFarmaco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbUnMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(jpAnvisaLayout.createSequentialGroup()
                        .addGroup(jpAnvisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbAnvisa)
                            .addComponent(jcbAntibiotico)
                            .addComponent(jcbControlado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txRegMs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jTabbedProdutoTributacao.addTab("Anvisa", jpAnvisa);

        txPesquisaProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txPesquisaProdutoFocusLost(evt);
            }
        });
        txPesquisaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txPesquisaProdutoActionPerformed(evt);
            }
        });
        txPesquisaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txPesquisaProdutoKeyReleased(evt);
            }
        });

        cbGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGrupoActionPerformed(evt);
            }
        });

        jLabel11.setText("Grupo");

        cbUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUnidadeActionPerformed(evt);
            }
        });

        jLabel12.setText("Unidade");

        jLabel13.setText("Local de impressão");

        buttonGroup1.add(rbNome);
        rbNome.setSelected(true);
        rbNome.setText("nome");
        rbNome.setFocusable(false);

        buttonGroup1.add(rbBarra);
        rbBarra.setText("Barra");
        rbBarra.setFocusable(false);

        cbSituacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo", "Inativo" }));

        jLabel14.setText("Situação");

        txNomeResumido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txNomeResumidoFocusLost(evt);
            }
        });

        jLabel15.setText("Descrição resumida:");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Lupa.png"))); // NOI18N
        jLabel16.setText("Pesquisa Item");

        buttonGroup1.add(rbGrupo);
        rbGrupo.setText("grupo");
        rbGrupo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbGrupoMouseClicked(evt);
            }
        });
        rbGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbGrupoActionPerformed(evt);
            }
        });

        txEstoqueMinimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txEstoqueMinimoKeyReleased(evt);
            }
        });

        jLabel23.setText("Estoque mínimo:");

        txCusto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txCustoActionPerformed(evt);
            }
        });
        txCusto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txCustoKeyReleased(evt);
            }
        });

        jLabel24.setText("Custo:");

        cbForcaVendas.setText("Força de vendas");
        cbForcaVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbForcaVendasActionPerformed(evt);
            }
        });

        jLabel26.setText("Volume total estoque");

        txVolumeEstoque.setEditable(false);
        txVolumeEstoque.setText("0");
        txVolumeEstoque.setFocusable(false);

        lbUnVolume.setText("UN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)))
                            .addComponent(jtfNome)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(txCodigoP, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbForcaVendas))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btCancelar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbBarra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbGrupo)
                        .addGap(324, 324, 324))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txPesquisaProduto, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTabbedProdutoTributacao)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txNomeResumido, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel11)
                            .addComponent(cbGrupo, 0, 399, Short.MAX_VALUE)
                            .addComponent(cbFornecedores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txVolumeEstoque)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel26)
                                                .addGap(18, 18, 18)
                                                .addComponent(lbUnVolume)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(34, 34, 34)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jtfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel23)
                                            .addComponent(txEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel24)
                                            .addComponent(txCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cbLocalImpressao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(cbForcaVendas))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel14))))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txCodigoP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cbSituacao)
                                        .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jtfCodigoBarras, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1)
                                .addGap(6, 6, 6)
                                .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txVolumeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbLocalImpressao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbBarra)
                            .addComponent(rbNome)
                            .addComponent(rbGrupo)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addComponent(txPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedProdutoTributacao, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btNovo)
                            .addComponent(btSalvar)
                            .addComponent(btAlterar)
                            .addComponent(btCancelar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(cbFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(txNomeResumido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jLabel15))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(107, 107, 107)
                                        .addComponent(jLabel26))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel4)
                                            .addComponent(lbUnVolume))))
                                .addGap(37, 37, 37)
                                .addComponent(jLabel2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedProdutoTributacao.getAccessibleContext().setAccessibleName("Pesquisa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        novoProduto();
        desabilitarHabilitarCampos(true);
        txPesquisaProduto.setEnabled(false);
        tbProdutos.setEnabled(false);
        jtfCodigoBarras.requestFocusInWindow();
        btSalvar.setEnabled(true);
        btCancelar.setEnabled(true);
        btAlterar.setEnabled(false);

        btNovo.setEnabled(false);
        tipoCadastro = "novo";
    }//GEN-LAST:event_btNovoActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        //novoProduto();
        txPesquisaProduto.setEnabled(false);
        recuperarProduto();
//        ViewFichaTecnica viewEstoqueProducao = new ViewFichaTecnica();
//        viewEstoqueProducao.setCodPrincipal(Integer.parseInt(txCodigoP.getText()));
        tbProdutos.setEnabled(false);
     //   btFichaTecnica.setEnabled(true);


    }//GEN-LAST:event_btAlterarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        desabilitarHabilitarCampos(false);
        this.carregarProdutos();
        this.limparDados();
        btSalvar.setEnabled(false);
        btCancelar.setEnabled(false);
        btAlterar.setEnabled(true);
     //   btFichaTecnica.setEnabled(false);
        txPesquisaProduto.setEnabled(true);
        btNovo.setEnabled(true);
        tbProdutos.setEnabled(true);
        lbUnVolume.setText("");


    }//GEN-LAST:event_btCancelarActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        modelProdutos = controllerProdutos.getProdutosCodigoBarrasController(jtfCodigoBarras.getText());
        if (jtfCodigoBarras.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "É necessário preencher o código de barras", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else if (jtfNome.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "É necessário preencher a descrição do produto ", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else if (jtfValor.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "É necessário preencher o valor de venda do produto ", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else if (jtfEstoque.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "É necessário preencher a quantidade em estoque do produto ", "ERRO", JOptionPane.ERROR_MESSAGE);

            //compara ao cadastrar um item novo, se o código de barras já existe no banco de dados
        } else if (tipoCadastro.equals("novo")) {
            if (modelProdutos.getCodigo_barras() == null) {
                salvarProduto();
                btSalvar.setEnabled(false);
                tbProdutos.setEnabled(true);
                txPesquisaProduto.setEnabled(true);
                txPesquisaProduto.setEnabled(true);

            } else {
                JOptionPane.showMessageDialog(this, "Código de barras já cadastrado no"
                        + " produto: \n" + "Nome: " + modelProdutos.getNome());
            }
            //comparação de código de barras para alteração do item    
        } else if (tipoCadastro.equals("alteracao")) {
            if (String.valueOf(modelProdutos.getCODIGO()).equals(txCodigoP.getText()) || (modelProdutos.getCodigo_barras() == null)) {
                alterarProduto();
                btSalvar.setEnabled(false);
                tbProdutos.setEnabled(true);
                txPesquisaProduto.setEnabled(true);
//                jTabbedProdutoTributacao.setSelectedIndex(this.jTabbedProdutoTributacao.getSelectedIndex() - 2);

            } else {
                JOptionPane.showMessageDialog(this, "Código de barras já cadastrado no"
                        + " produto: \n" + "Nome: " + modelProdutos.getNome());

            }

        }

    }//GEN-LAST:event_btSalvarActionPerformed


    private void jtfCodigoBarrasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoBarrasKeyReleased
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            cbFornecedores.grabFocus();
        }
    }//GEN-LAST:event_jtfCodigoBarrasKeyReleased

    private void jtfValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfValorFocusLost

    }//GEN-LAST:event_jtfValorFocusLost

    private void jtfEstoqueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfEstoqueFocusLost

    }//GEN-LAST:event_jtfEstoqueFocusLost

    private void txPesquisaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txPesquisaProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txPesquisaProdutoActionPerformed

    private void cbCestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCestActionPerformed

    private void cbGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGrupoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbGrupoActionPerformed

    private void cbUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUnidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbUnidadeActionPerformed

    private void jtfValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorActionPerformed

    private void jtfNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNomeFocusLost
        // converte em maiusculo o que o usuario digitar
        this.jtfNome.setText(jtfNome.getText().toUpperCase());
        //tira acentos
        BLTiraAcentos blTiraAcentos = new BLTiraAcentos();
        this.jtfNome.setText(blTiraAcentos.TiraAcentos(jtfNome.getText()));
    }//GEN-LAST:event_jtfNomeFocusLost

    private void txPesquisaProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txPesquisaProdutoFocusLost

    }//GEN-LAST:event_txPesquisaProdutoFocusLost

    private void jtfValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorKeyReleased
        // TODO add your handling code here:
        this.jtfValor.setText(new BLMascaras().converterVirgulaParaPonto(this.jtfValor.getText()));        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorKeyReleased

    private void jtfEstoqueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfEstoqueKeyReleased
        this.jtfEstoque.setText(new BLMascaras().converterVirgulaParaPonto(this.jtfEstoque.getText()));
    }//GEN-LAST:event_jtfEstoqueKeyReleased

    private void txPesquisaProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txPesquisaProdutoKeyReleased
        DefaultTableModel tabela = (DefaultTableModel) this.tbProdutos.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tabela);
        //Charles - tornar a caixa de pesquisa em letra maiuscula e tirar acentos
        // converte em maiusculo o que o usuario digitar
        this.txPesquisaProduto.setText(txPesquisaProduto.getText().toUpperCase());
        //tira acentos
        BLTiraAcentos blTiraAcentos = new BLTiraAcentos();
        this.txPesquisaProduto.setText(blTiraAcentos.TiraAcentos(txPesquisaProduto.getText()));

        this.tbProdutos.setRowSorter(sorter);
        String text = txPesquisaProduto.getText();
        if (rbNome.isSelected()) {
            sorter.setRowFilter(RowFilter.regexFilter(text, 1));
        } else if (rbBarra.isSelected()) {
            sorter.setRowFilter(RowFilter.regexFilter(text, 5));

        } else if (rbGrupo.isSelected()) {
            sorter.setRowFilter(RowFilter.regexFilter(text, 6));
        }

        /**
         *
         *
         * this.jtfPesquisaProduto.setText(jtfPesquisaProduto.getText().toUpperCase());
         * //tira acentos BLTiraAcentos blTiraAcentos = new BLTiraAcentos();
         * this.jtfPesquisaProduto.setText(blTiraAcentos.TiraAcentos(jtfPesquisaProduto.getText()));
    }//GEN-LAST:event_txPesquisaProdutoKeyReleased
*/
    }
    private void txNomeResumidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txNomeResumidoFocusLost
        // converte em maiusculo o que o usuario digitar
        this.txNomeResumido.setText(txNomeResumido.getText().toUpperCase());
        //tira acentos
        BLTiraAcentos blTiraAcentos = new BLTiraAcentos();
        this.txNomeResumido.setText(blTiraAcentos.TiraAcentos(txNomeResumido.getText()));
    }//GEN-LAST:event_txNomeResumidoFocusLost

    private void rbGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbGrupoActionPerformed

    private void rbGrupoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbGrupoMouseClicked

    }//GEN-LAST:event_rbGrupoMouseClicked

    private void txRegMsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txRegMsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txRegMsActionPerformed

    private void txEstoqueMinimoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txEstoqueMinimoKeyReleased
        this.txEstoqueMinimo.setText(new BLMascaras().converterVirgulaParaPonto(this.txEstoqueMinimo.getText()));
    }//GEN-LAST:event_txEstoqueMinimoKeyReleased

    private void txCustoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txCustoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txCustoActionPerformed

    private void txCustoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCustoKeyReleased
        this.txCusto.setText(new BLMascaras().converterVirgulaParaPonto(this.txCusto.getText()));
    }//GEN-LAST:event_txCustoKeyReleased

    private void txFatorConversaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txFatorConversaoKeyReleased
        this.txFatorConversao.setText(new BLMascaras().converterVirgulaParaPonto(this.txFatorConversao.getText()));
    }//GEN-LAST:event_txFatorConversaoKeyReleased

    private void cbUnidadeVolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUnidadeVolumeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbUnidadeVolumeActionPerformed

    private void cbForcaVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbForcaVendasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbForcaVendasActionPerformed

    private void listarFornecedor() {
        listaFornecedor = controllerFornecedor.getListaFornecedorController();
        cbFornecedores.removeAllItems();
        for (int i = 0; i < listaFornecedor.size(); i++) {
            cbFornecedores.addItem(listaFornecedor.get(i).getNome());
        }
    }

    private void excluirProduto() {
        int linha = tbProdutos.getSelectedRow();
        String nome = (String) tbProdutos.getValueAt(linha, 1);
        int codigo = (Integer) tbProdutos.getValueAt(linha, 0);
        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro \nNome: "
                + nome + " ?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerProdutos.excluirProdutosController(codigo)) {
                JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                carregarProdutos();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao e os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean recuperarProduto() {

        modelParametros = controllerParametros.getConfiguracoesGeraisController(1);
        tipoCadastro = "alteracao";
        //recebe a linha selecionada
        int linha = this.tbProdutos.getSelectedRow();
        try {
            //recupera os dados do banco
            int codigo = (Integer) tbProdutos.getValueAt(linha, 0);
            //pega o codigo do cliente na linha selecionada  
            modelProdutos = controllerProdutos.getProdutosController(codigo);
            //seta os dados na interface
            this.txCodigoP.setText(String.valueOf(modelProdutos.getCODIGO()));
            this.jtfNome.setText(modelProdutos.getNome());
            this.txNomeResumido.setText(modelProdutos.getProd_nome_resumido());
            this.jtfValor.setText(String.valueOf(modelProdutos.getValor()));
            this.jtfEstoque.setText(String.valueOf(modelProdutos.getEstoque()));
            this.cbFornecedores.setSelectedItem(controllerFornecedor.getFornecedorController(modelProdutos.getFornecedoresCodigo()).getNome());
            this.jtfCodigoBarras.setText(modelProdutos.getCodigo_barras());
            this.txCusto.setText(String.valueOf(modelProdutos.getProd_custo()));
            txVolumeEstoque.setText(String.valueOf(modelProdutos.getVolumeEstoque()));

            this.txFatorConversao.setText(String.valueOf(modelProdutos.getFator_conversao()));

            this.txEstoqueMinimo.setText(String.valueOf(modelProdutos.getProd_estoque_minimo()));
            if (modelProdutos.getProd_situacao().equals("A")) {
                cbSituacao.setSelectedItem("Ativo");
            } else if (modelProdutos.getProd_situacao().equals("I")) {
                cbSituacao.setSelectedItem("Inativo");
            }
            if (modelProdutos.getProd_ingrediente() == 1) {
                jcbIngrediente.setSelected(true);

            } else {
                jcbIngrediente.setSelected(false);
            }
            if (modelProdutos.getUtiliza_composicao() == 1) {
                jcbComposicao.setSelected(true);

            } else {
                jcbComposicao.setSelected(false);
            }
            if (modelProdutos.getProd_anvisa() == 1) {
                jcbAnvisa.setSelected(true);

            } else {
                jcbAnvisa.setSelected(false);
            }

            if (modelProdutos.getForca_de_vendas() == 1) {
                cbForcaVendas.setSelected(true);

            } else {
                cbForcaVendas.setSelected(false);
            }
            if (modelProdutos.getNao_fraciona() == 1) {
                jcbNaoFracionar.setSelected(true);

            } else {
                jcbNaoFracionar.setSelected(false);
            }

            //Exibe o combobox através do código
            modelGrupoProduto = controllerGrupoProduto.getGrupoProdutoController((int) modelProdutos.getProd_grupo());
            cbGrupo.setSelectedItem(modelGrupoProduto.getGru_descricao());

            modelUnidade = controllerUnidade.getUnidadeController((int) modelProdutos.getProd_un());
            modelUnVolume = controllerUnidade.getUnidadeController((int) modelProdutos.getUn_volume());
            cbUnidade.setSelectedItem(modelUnidade.getUn_descricao());
            cbUnidadeVolume.setSelectedItem(modelUnVolume.getUn_descricao());
            lbUnVolume.setText("(" + modelUnVolume.getUn_descricao() + ")");
            modelOrigem = controllerOrigem.getOrigemController((int) modelProdutos.getProd_origem());
            cbOrigem.setSelectedItem(modelOrigem.getOrig_codigo() + " - " + modelOrigem.getOrig_descricao());
            modelCest = controllerCest.getCestController((int) modelProdutos.getProd_cest());
            cbCest.setSelectedItem(modelCest.getCest_numero() + " - " + modelCest.getCest_descricao());
            modelNcm = controllerNcm.getNcmController(modelProdutos.getProd_ncm());

            cbNcm.setSelectedItem(modelNcm.getNcm_num() + " - " + modelNcm.getNcm_descricao());

            modelTributacao = controllerTributacao.getTributacaoController(modelProdutos.getProd_tributacao());
            cbTributacao.setSelectedItem(modelTributacao.getTrib_cfop()+" - "+modelTributacao.getTrib_descricao());

            System.out.println(modelTributacao.getTrib_descricao());

            desabilitarHabilitarCampos(true);
            btSalvar.setEnabled(true);
            btCancelar.setEnabled(true);
            btAlterar.setEnabled(false);

            btNovo.setEnabled(false);
            tbProdutos.getSelectionModel().clearSelection();
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }

    /**
     * Função do botão salvar ao alterar um produto
     *
     * @return
     */
    private boolean alterarProduto() {
        tipoCadastro = "alteracao";
        modelProdutos.setCODIGO(Integer.parseInt(txCodigoP.getText()));
        modelProdutos.setNome(this.jtfNome.getText());
        modelProdutos.setProd_nome_resumido(this.txNomeResumido.getText());
        modelProdutos.setValor(Float.parseFloat(this.jtfValor.getText()));
        modelProdutos.setFornecedoresCodigo(controllerFornecedor.getFornecedorController(this.cbFornecedores.getSelectedItem().toString()).getCodigo());
        modelProdutos.setEstoque(Float.parseFloat(this.jtfEstoque.getText()));
        modelProdutos.setCodigo_barras(this.jtfCodigoBarras.getText());
        modelProdutos.setProd_custo(Float.parseFloat(this.txCusto.getText()));
        modelProdutos.setProd_estoque_minimo(Float.parseFloat(this.txEstoqueMinimo.getText()));
        modelProdutos.setFator_conversao(Float.parseFloat(this.txFatorConversao.getText()));

        //  modelProdutos.setVolumeEstoque(Float.parseFloat(this.txVolumeEstoque.getText()));
        modelProdutos.setVolumeEstoque(Float.parseFloat(jtfEstoque.getText()) * Float.parseFloat(this.txFatorConversao.getText()));
        //modelProdutos.setVolumeEstoque(Float.parseFloat(this.txVolumeEstoque.getText()) * Float.parseFloat(this.txFatorConversao.getText()));

        if (jcbIngrediente.isSelected()) {
            modelProdutos.setProd_ingrediente(1);
        } else if (!jcbIngrediente.isSelected()) {
            modelProdutos.setProd_ingrediente(0);
        }
        if (jcbComposicao.isSelected()) {
            modelProdutos.setUtiliza_composicao(1);
        } else if (!jcbComposicao.isSelected()) {
            modelProdutos.setUtiliza_composicao(0);
        }
        if (jcbAnvisa.isSelected()) {
            modelProdutos.setProd_anvisa(1);
        } else if (!jcbAnvisa.isSelected()) {
            modelProdutos.setProd_anvisa(0);
        }

        if (cbSituacao.getSelectedItem() == "Ativo") {
            modelProdutos.setProd_situacao("A");

        } else if (cbSituacao.getSelectedItem() == "Inativo") {
            modelProdutos.setProd_situacao("I");
        }
        if (cbForcaVendas.isSelected()) {
            modelProdutos.setForca_de_vendas(1);
        } else if (!cbForcaVendas.isSelected()) {
            modelProdutos.setForca_de_vendas(0);
        }
        if (jcbNaoFracionar.isSelected()) {
            modelProdutos.setNao_fraciona(1);
        } else if (!jcbNaoFracionar.isSelected()) {
            modelProdutos.setNao_fraciona(0);
        }

        //Salva o código da combo box no banco de dados
        modelGrupoProduto = controllerGrupoProduto.getGrupoProdutoController(cbGrupo.getSelectedItem().toString());
        modelProdutos.setProd_grupo(modelGrupoProduto.getGru_codigo());
        modelUnidade = controllerUnidade.getUnidadeController(cbUnidade.getSelectedItem().toString());
        modelProdutos.setProd_un(modelUnidade.getUn_codigo());

        modelUnVolume = controllerUnVolume.getUnidadeController(cbUnidadeVolume.getSelectedItem().toString());
        modelProdutos.setUn_volume(modelUnVolume.getUn_codigo());

        modelOrigem = controllerOrigem.getOrigemController(cbOrigem.getSelectedIndex());
        modelProdutos.setProd_origem(modelOrigem.getOrig_codigo());
        modelCest = controllerCest.getCestController((int) cbCest.getSelectedIndex() + 1);
        modelProdutos.setProd_cest(modelCest.getCest_codigo());
        modelNcm = controllerNcm.getNcmController((int) cbNcm.getSelectedIndex() + 1);
        modelProdutos.setProd_ncm(modelNcm.getNcm_codigo());
        modelTributacao = controllerTributacao.getTributacaoController((int) cbTributacao.getSelectedIndex() + 1);
        modelProdutos.setProd_tributacao(modelTributacao.getTrib_codigo());

        //salvar 
        if (controllerProdutos.atualizarProdutosController(modelProdutos)) {
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso!");
            desabilitarHabilitarCampos(false);
            this.carregarProdutos();
            limparDados();
            btSalvar.setEnabled(false);
            btCancelar.setEnabled(false);
            btAlterar.setEnabled(true);
//            btFichaTecnica.setEnabled(false);
            btNovo.setEnabled(true);
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    public void carregarProdutos() {
        listamModelProdutos = controllerProdutos.getListaProdutosTodosController();

        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelo.setNumRows(0);
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listamModelProdutos.size();
        for (int i = 0; i < cont; i++) {

            modelo.addRow(new Object[]{
                listamModelProdutos.get(i).getCODIGO(),
                listamModelProdutos.get(i).getNome(),
                listamModelProdutos.get(i).getValor(),
                listamModelProdutos.get(i).getProd_custo(),
                listamModelProdutos.get(i).getEstoque(),
                listamModelProdutos.get(i).getCodigo_barras(),
                // listamModelProdutos.get(i).getProd_grupo(),});
                listamModelProdutos.get(i).getGru_descricao(),});
            //modelGrupoProduto.getGru_descricao(),});

        }

    }

    private void limparDados() {
        jtfNome.setText("");
        txCodigoP.setText("");
        txNomeResumido.setText("");
        jtfValor.setText("");
        jtfEstoque.setText("");
        txPesquisaProduto.setText("");
        txCusto.setText("");
        txEstoqueMinimo.setText("");
        jtfCodigoBarras.setText("");
        cbUnidade.setSelectedIndex(0);
        cbFornecedores.setSelectedIndex(0);
        cbGrupo.setSelectedIndex(0);
        cbNcm.setSelectedIndex(0);
        cbOrigem.setSelectedIndex(0);
        cbTributacao.setSelectedIndex(0);
        cbUnidade.setSelectedIndex(0);
        cbUnidadeVolume.setSelectedIndex(0);
        cbCest.setSelectedIndex(0);
        cbSituacao.setSelectedIndex(0);
        jcbComposicao.setSelected(false);
        jcbIngrediente.setSelected(false);
        cbForcaVendas.setSelected(false);
        jcbNaoFracionar.setSelected(false);
        txVolumeEstoque.setText("0");
    }

    protected void desabilitarHabilitarCampos(boolean condicao) {
        jtfNome.setEnabled(condicao);
        txNomeResumido.setEditable(condicao);
        jtfValor.setEnabled(condicao);
        jtfEstoque.setEnabled(condicao);
        cbCest.setEnabled(condicao);
        cbFornecedores.setEnabled(condicao);
        cbGrupo.setEnabled(condicao);
        cbNcm.setEnabled(condicao);
        cbOrigem.setEnabled(condicao);
        cbTributacao.setEnabled(condicao);
        cbUnidade.setEnabled(condicao);
        cbUnidadeVolume.setEnabled(condicao);
        cbLocalImpressao.setEnabled(condicao);
        cbSituacao.setEnabled(condicao);
        jtfCodigoBarras.setEnabled(condicao);
//        btFichaTecnica.setEnabled(false);
        jcbComposicao.setEnabled(condicao);
        jcbIngrediente.setEnabled(condicao);
        txCusto.setEnabled(condicao);
        txEstoqueMinimo.setEnabled(condicao);
        cbForcaVendas.setEnabled(condicao);
        jcbNaoFracionar.setEnabled(condicao);
        txFatorConversao.setEnabled(condicao);
        txVolumeEstoque.setEnabled(condicao);

    }

    private void novoProduto() {

        txCodigoP.setText("Novo");
        jtfNome.setText("");
        txNomeResumido.setText("");
        jtfValor.setText("");
        jtfEstoque.setText("");
        jtfCodigoBarras.setText("");
        cbFornecedores.setSelectedItem("");
        txFatorConversao.setText("1");
        tipoCadastro = "novo";
        txVolumeEstoque.setText("0");
    }

    /**
     * Salva os produtos na tabela
     *
     * @return
     */
    private boolean salvarProduto() {
        modelProdutos.setNome(this.jtfNome.getText());
        modelProdutos.setProd_nome_resumido(this.txNomeResumido.getText());
        modelProdutos.setValor(Float.parseFloat(this.jtfValor.getText()));
        modelProdutos.setFornecedoresCodigo(controllerFornecedor.getFornecedorController(this.cbFornecedores.getSelectedItem().toString()).getCodigo());
        modelProdutos.setEstoque(Float.parseFloat(this.jtfEstoque.getText()));
        modelProdutos.setCodigo_barras(this.jtfCodigoBarras.getText());
        modelProdutos.setFator_conversao(Float.parseFloat(this.txFatorConversao.getText()));

        //modelProdutos.setVolumeEstoque(Float.parseFloat(this.txVolumeEstoque.getText()));
        modelProdutos.setVolumeEstoque(Float.parseFloat(jtfEstoque.getText()) * Float.parseFloat(this.txFatorConversao.getText()));

        modelProdutos.setProd_custo(Float.parseFloat(this.txCusto.getText()));
        modelProdutos.setProd_estoque_minimo(Float.parseFloat(this.txEstoqueMinimo.getText()));

        if (jcbIngrediente.isSelected()) {
            modelProdutos.setProd_ingrediente(1);
        } else if (!jcbIngrediente.isSelected()) {
            modelProdutos.setProd_ingrediente(0);
        }
        if (jcbComposicao.isSelected()) {
            modelProdutos.setUtiliza_composicao(1);
        } else if (!jcbComposicao.isSelected()) {
            modelProdutos.setUtiliza_composicao(0);
        }

        if (cbSituacao.getSelectedItem() == "Ativo") {
            modelProdutos.setProd_situacao("A");

        } else if (cbSituacao.getSelectedItem() == "Inativo") {
            modelProdutos.setProd_situacao("I");
        }
        if (cbForcaVendas.isSelected()) {
            modelProdutos.setForca_de_vendas(1);
        } else if (!cbForcaVendas.isSelected()) {
            modelProdutos.setForca_de_vendas(0);
        }
        if (jcbNaoFracionar.isSelected()) {
            modelProdutos.setNao_fraciona(1);
        } else if (!jcbNaoFracionar.isSelected()) {
            modelProdutos.setNao_fraciona(0);
        }

        //Salva o código da combo box no banco de dados
        modelGrupoProduto = controllerGrupoProduto.getGrupoProdutoController(cbGrupo.getSelectedItem().toString());
        modelProdutos.setProd_grupo(modelGrupoProduto.getGru_codigo());
        modelUnidade = controllerUnidade.getUnidadeController(cbUnidade.getSelectedItem().toString());
        modelUnVolume = controllerUnVolume.getUnidadeController(cbUnidadeVolume.getSelectedItem().toString());

        modelProdutos.setProd_un(modelUnidade.getUn_codigo());
        modelProdutos.setUn_volume(modelUnVolume.getUn_codigo());
        modelOrigem = controllerOrigem.getOrigemController(cbOrigem.getSelectedIndex());
        modelProdutos.setProd_origem(modelOrigem.getOrig_codigo());
        modelCest = controllerCest.getCestController((int) cbCest.getSelectedIndex() + 1);
        modelProdutos.setProd_cest(modelCest.getCest_codigo());
        modelNcm = controllerNcm.getNcmController((int) cbNcm.getSelectedIndex() + 1);
        modelProdutos.setProd_ncm(modelNcm.getNcm_codigo());
        modelTributacao = controllerTributacao.getTributacaoController((int) cbTributacao.getSelectedIndex() + 1);
        modelProdutos.setProd_tributacao(modelTributacao.getTrib_codigo());

        //salvar 
        if (controllerProdutos.salvarProdutosController(modelProdutos) > 0) {
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
            desabilitarHabilitarCampos(false);
            this.carregarProdutos();
            limparDados();
            btSalvar.setEnabled(false);
            btCancelar.setEnabled(false);
            btAlterar.setEnabled(true);

            btNovo.setEnabled(true);
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    /**
     * Preencher o combobox grupo de produtos
     */
    private void preencherCbGrupo() {
        listaModelGrupoProduto = controllerGrupoProduto.getListaGrupoProdutoController();

        cbGrupo.removeAllItems();
        for (int i = 0; i < listaModelGrupoProduto.size(); i++) {
            cbGrupo.addItem(listaModelGrupoProduto.get(i).getGru_descricao());

        }

    }

    /**
     * Preencher combobox Unidade
     */
    private void preencherCbUnidade() {
        listaModelUnidade = controllerUnidade.getListaUnidadeController();
        cbUnidade.removeAllItems();
        for (int i = 0; i < listaModelUnidade.size(); i++) {
            cbUnidade.addItem(listaModelUnidade.get(i).getUn_descricao());

        }
    }

    /**
     * Preencher combobox Unidade
     */
    private void preencherCbUnidadeVolume() {
        listaModelUnidade = controllerUnidade.getListaUnidadeController();
        cbUnidadeVolume.removeAllItems();
        for (int i = 0; i < listaModelUnidade.size(); i++) {
            cbUnidadeVolume.addItem(listaModelUnidade.get(i).getUn_descricao());

        }
    }

    /**
     * preencher combobox NCM
     */
    private void preencherCbNcm() {
        listaModelNcm = controllerNcm.getListaNcmController();
        cbNcm.removeAllItems();
        for (int i = 0; i < listaModelNcm.size(); i++) {
            cbNcm.addItem(listaModelNcm.get(i).getNcm_num() + " - " + listaModelNcm.get(i).getNcm_descricao());

        }
    }

    /**
     * Preencher combobox Cest
     */
    private void preencherCbCest() {
        listaModelCest = controllerCest.getListaCestController();
        cbCest.removeAllItems();
        for (int i = 0; i < listaModelCest.size(); i++) {
            cbCest.addItem(listaModelCest.get(i).getCest_numero() + " - " + listaModelCest.get(i).getCest_descricao());

        }
    }

    /**
     * Preencher combobox Tributação
     */
    private void preencherCbTributacao() {
        listaModelTributacao = controllerTributacao.getListaTributacaoController();
        cbTributacao.removeAllItems();
        for (int i = 0; i < listaModelTributacao.size(); i++) {
            cbTributacao.addItem(listaModelTributacao.get(i).getTrib_cfop() + " - " + listaModelTributacao.get(i).getTrib_descricao());

        }
    }

    /**
     * Preencher o combox Origem
     */
    private void preencherCbOrigem() {
        listaModelOrigem = controllerOrigem.getListaOrigemController();
        cbOrigem.removeAllItems();
        for (int i = 0; i < listaModelOrigem.size(); i++) {
            cbOrigem.addItem(listaModelOrigem.get(i).getOrig_codigo() + " - " + listaModelOrigem.get(i).getOrig_descricao());

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbCest;
    private javax.swing.JComboBox<String> cbDCB;
    private javax.swing.JCheckBox cbForcaVendas;
    private componentes.UJComboBox cbFornecedores;
    private javax.swing.JComboBox<String> cbGrupo;
    private javax.swing.JComboBox<String> cbLocalImpressao;
    private javax.swing.JComboBox<String> cbNcm;
    private javax.swing.JComboBox<String> cbOrigem;
    private javax.swing.JComboBox<String> cbSituacao;
    private javax.swing.JComboBox<String> cbTipo;
    private javax.swing.JComboBox<String> cbTributacao;
    private javax.swing.JComboBox<String> cbUnFarmaco;
    private javax.swing.JComboBox<String> cbUnInsumo;
    private javax.swing.JComboBox<String> cbUnMedicamento;
    private javax.swing.JComboBox<String> cbUnidade;
    private javax.swing.JComboBox<String> cbUnidadeVolume;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedProdutoTributacao;
    private javax.swing.JCheckBox jcbAntibiotico;
    private javax.swing.JCheckBox jcbAnvisa;
    private javax.swing.JCheckBox jcbComposicao;
    private javax.swing.JCheckBox jcbControlado;
    private javax.swing.JCheckBox jcbIngrediente;
    private javax.swing.JCheckBox jcbNaoFracionar;
    private javax.swing.JPanel jpAnvisa;
    private javax.swing.JTextField jtfCodigoBarras;
    private javax.swing.JFormattedTextField jtfEstoque;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JFormattedTextField jtfValor;
    private javax.swing.JLabel lbUnVolume;
    private javax.swing.JRadioButton rbBarra;
    private javax.swing.JRadioButton rbGrupo;
    private javax.swing.JRadioButton rbNome;
    private javax.swing.JTable tbProdutos;
    public javax.swing.JTextField txCodigoP;
    public javax.swing.JTextField txCusto;
    private javax.swing.JTextField txEstoqueMinimo;
    private javax.swing.JTextField txFatorConversao;
    private javax.swing.JTextField txNomeResumido;
    private javax.swing.JTextField txPesquisaProduto;
    private javax.swing.JTextField txRegMs;
    private javax.swing.JTextField txVolumeEstoque;
    // End of variables declaration//GEN-END:variables
}
